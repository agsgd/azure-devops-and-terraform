

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  - name: DEV_ENVIRONMENT
    value: dev
  - name: QA_ENVIRONMENT
    value: qa
  

stages:
  - stage: 
    jobs:
      - job: TerraformValidateJob   
        continueOnError: false
        steps:
                    
          - task: PublishBuildArtifacts@1
            displayName: publish artifacts
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              ArtifactName: 'terraform-manifests-out'
              publishLocation: 'Container'
          - task: TerraformInstaller@0
            displayName: Terraform Install
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@0
            displayName: Terraform init
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              backendType: 'azurerm'
              backendServiceArm: 'Free Trial(1)(670a49a3-bea5-4729-aea5-8121cd918ca4)'
              backendAzureRmResourceGroupName: 'storage-rg'
              backendAzureRmStorageAccountName: 'koushiktanisha'
              backendAzureRmContainerName: 'tfstatefile'
              backendAzureRmKey: 'aks-terraform.tfstate'
              allowTelemetryCollection: false
          - task: TerraformCLI@0
            displayName: Terraform Validate
            inputs:
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform-manifests'
              allowTelemetryCollection: false
  - stage: 
    jobs:
      - deployment: 
        displayName: 
        pool:
          vmImage: 'ubuntu latest'
        environment: $(DEV_ENVIRONMENT)
        strategy: 
         runOnce:
           deploy:
             steps:
              - task: DownloadSecureFile@1
                displayName: Download ssh-key
                name: sshkey
                inputs:
                  secureFile: 'aks-terraform-devops-ssh-key-ububtu.pub'
              - task: TerraformCLI@0
                inputs:
                  command: 'init'
                  workingDirectory: '$(Pipeline.Workspace)/terraform-manifests-out'
                  backendType: 'azurerm'
                  backendServiceArm: 'Free Trial(1)(670a49a3-bea5-4729-aea5-8121cd918ca4)'
                  backendAzureRmResourceGroupName: 'storage-rg'
                  backendAzureRmStorageAccountName: 'koushiktanisha'
                  backendAzureRmContainerName: 'tfstatefile'
                  backendAzureRmKey: 'aks-$(DEV_ENVIRONMENT).tfstate'
                  allowTelemetryCollection: false
              - task: TerraformCLI@0
                displayName: Terraform plan
                inputs:
                  command: 'plan'
                  workingDirectory: '$(Pipeline.Workspace)/terraform-manifests-out'
                  environmentServiceName: 'Free Trial(1)(670a49a3-bea5-4729-aea5-8121cd918ca4)'
                  commandOptions: '-var ssh_public_key=$(sshkey.secureFilePath) -var environment=$(DEV_ENVIRONMENT) -out $(Pipeline.Workspace)/terraform-manifests-out/$(DEV_ENVIRONMENT)-$(Build.BuildId).out'
                  allowTelemetryCollection: false
              - task: TerraformCLI@0
                displayName: Terraform apply
                inputs:
                  command: 'apply'
                  workingDirectory: '$(Pipeline.Workspace)/terraform-manifests-out'
                  commandOptions: '$(Pipeline.Workspace)/terraform-manifests-out/$(DEV_ENVIRONMENT)-$(Build.BuildId).out'
                  allowTelemetryCollection: false